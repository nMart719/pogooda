/*
 * API back-endu aplikacji PoGOODa
 * Back-end aplikacji PoGOODa do u≈ºycia na projekcie z przedmiotu \"Projektowanie oprogramowania\". API zgodne z OAS v3.
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.36
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The DanePogodoweDto model module.
 * @module model/DanePogodoweDto
 * @version 1.0.0
 */
export class DanePogodoweDto {
  /**
   * Constructs a new <code>DanePogodoweDto</code>.
   * @alias module:model/DanePogodoweDto
   * @class
   * @param czasOdczytu {Date} 
   * @param opadyDeszczu {Number} 
   * @param predkoscWiatru {Number} 
   * @param temperaturaOdczuwalna {Number} 
   * @param ocenaPogody {module:model/DanePogodoweDto.OcenaPogodyEnum} 
   */
  constructor(czasOdczytu, opadyDeszczu, predkoscWiatru, temperaturaOdczuwalna, ocenaPogody) {
    this.czasOdczytu = czasOdczytu;
    this.opadyDeszczu = opadyDeszczu;
    this.predkoscWiatru = predkoscWiatru;
    this.temperaturaOdczuwalna = temperaturaOdczuwalna;
    this.ocenaPogody = ocenaPogody;
  }

  /**
   * Constructs a <code>DanePogodoweDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DanePogodoweDto} obj Optional instance to populate.
   * @return {module:model/DanePogodoweDto} The populated <code>DanePogodoweDto</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DanePogodoweDto();
      if (data.hasOwnProperty('czasOdczytu'))
        obj.czasOdczytu = ApiClient.convertToType(data['czasOdczytu'], 'Date');
      if (data.hasOwnProperty('cisnienieAtmosferyczne'))
        obj.cisnienieAtmosferyczne = ApiClient.convertToType(data['cisnienieAtmosferyczne'], 'Number');
      if (data.hasOwnProperty('opadyDeszczu'))
        obj.opadyDeszczu = ApiClient.convertToType(data['opadyDeszczu'], 'Number');
      if (data.hasOwnProperty('jakoscPowietrza'))
        obj.jakoscPowietrza = ApiClient.convertToType(data['jakoscPowietrza'], 'Number');
      if (data.hasOwnProperty('predkoscWiatru'))
        obj.predkoscWiatru = ApiClient.convertToType(data['predkoscWiatru'], 'Number');
      if (data.hasOwnProperty('promieniowanieSloneczne'))
        obj.promieniowanieSloneczne = ApiClient.convertToType(data['promieniowanieSloneczne'], 'Number');
      if (data.hasOwnProperty('temperaturaOdczuwalna'))
        obj.temperaturaOdczuwalna = ApiClient.convertToType(data['temperaturaOdczuwalna'], 'Number');
      if (data.hasOwnProperty('temperaturaZewnetrzna'))
        obj.temperaturaZewnetrzna = ApiClient.convertToType(data['temperaturaZewnetrzna'], 'Number');
      if (data.hasOwnProperty('wilgotnoscZewnetrzna'))
        obj.wilgotnoscZewnetrzna = ApiClient.convertToType(data['wilgotnoscZewnetrzna'], 'Number');
      if (data.hasOwnProperty('fars'))
        obj.fars = ApiClient.convertToType(data['fars'], 'Number');
      if (data.hasOwnProperty('uvi'))
        obj.uvi = ApiClient.convertToType(data['uvi'], 'Number');
      if (data.hasOwnProperty('ocenaPogody'))
        obj.ocenaPogody = ApiClient.convertToType(data['ocenaPogody'], 'String');
    }
    return obj;
  }
}

/**
 * @member {Date} czasOdczytu
 */
DanePogodoweDto.prototype.czasOdczytu = undefined;

/**
 * @member {Number} cisnienieAtmosferyczne
 */
DanePogodoweDto.prototype.cisnienieAtmosferyczne = undefined;

/**
 * @member {Number} opadyDeszczu
 */
DanePogodoweDto.prototype.opadyDeszczu = undefined;

/**
 * @member {Number} jakoscPowietrza
 */
DanePogodoweDto.prototype.jakoscPowietrza = undefined;

/**
 * @member {Number} predkoscWiatru
 */
DanePogodoweDto.prototype.predkoscWiatru = undefined;

/**
 * @member {Number} promieniowanieSloneczne
 */
DanePogodoweDto.prototype.promieniowanieSloneczne = undefined;

/**
 * @member {Number} temperaturaOdczuwalna
 */
DanePogodoweDto.prototype.temperaturaOdczuwalna = undefined;

/**
 * @member {Number} temperaturaZewnetrzna
 */
DanePogodoweDto.prototype.temperaturaZewnetrzna = undefined;

/**
 * @member {Number} wilgotnoscZewnetrzna
 */
DanePogodoweDto.prototype.wilgotnoscZewnetrzna = undefined;

/**
 * @member {Number} fars
 */
DanePogodoweDto.prototype.fars = undefined;

/**
 * @member {Number} uvi
 */
DanePogodoweDto.prototype.uvi = undefined;

/**
 * Allowed values for the <code>ocenaPogody</code> property.
 * @enum {String}
 * @readonly
 */
DanePogodoweDto.OcenaPogodyEnum = {
  /**
   * value: "STORMY"
   * @const
   */
  STORMY: "STORMY",

  /**
   * value: "RAINY"
   * @const
   */
  RAINY: "RAINY",

  /**
   * value: "FULL_CLOUDY"
   * @const
   */
  FULL_CLOUDY: "FULL_CLOUDY",

  /**
   * value: "CLOUDY"
   * @const
   */
  CLOUDY: "CLOUDY",

  /**
   * value: "SUNNY"
   * @const
   */
  SUNNY: "SUNNY"
};
/**
 * @member {module:model/DanePogodoweDto.OcenaPogodyEnum} ocenaPogody
 */
DanePogodoweDto.prototype.ocenaPogody = undefined;

